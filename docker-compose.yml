version: "3.8"
services:
  web:
    build: .
    restart: always
    env_file: .env
    container_name: django_web_1
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    entrypoint: sh /code/docker-entrypoint.sh
    depends_on:
      - postgres_db
      - mongo_db
      - rabbitmq_broker
  postgres_db:
    image: postgres:13.1
    restart: always
    container_name: postgres_db_1
    env_file: .env
  mongo_db:
    image: mongo:4.4.2
    restart: always
    container_name: mongo_db_1
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
  rabbitmq_broker:
    image: rabbitmq:3.8.9
    restart: always
    container_name: rabbitmq_broker_1
    env_file: .env
  cronjobs:
    build:
      context: .
      dockerfile: Dockerfile-alternate
    restart: always
    container_name: cronjobs_1
    env_file: .env
    volumes:
      - .:/code
    entrypoint: sh /code/cronjobs-entrypoint.sh
    depends_on:
      - postgres_db
      - mongo_db

